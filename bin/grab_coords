#!/usr/bin/env perl

use strict;
use lib $ENV{'QCHASM'};
use lib "$ENV{QCHASM}/AaronTools/bin";

use Getopt::Long;
use Pod::Usage;
use AaronTools::Geometry;
require _utils;

sub main {
    my %opt  = %{ shift(@_) };
    my $file = shift;

    my $geo = new AaronTools::Geometry();

    $geo->{name} = $file;

    $geo->read_geometry($file)
      or die("File may be damaged, cannot read geometry\n");

    $opt{output} = _utils::handle_overwrite( $opt{output} ) unless $opt{force};
    _utils::mkdirsfor( $opt{output} ) if $opt{output};
    $geo->printXYZ( $opt{output}, '', 1 );

    return 0;
}

my %opt;
GetOptions( 'help|h'     => \$opt{help},
            'force|f'    => \$opt{force},
            'output|o=s' => \$opt{output} )
  or pod2usage(
    { -exitval => 1,
      -verbose => 1
    } );
pod2usage(0) if $opt{help};
pod2usage(
    { -message => "Please specify a filename\n",
      -exitval => 1,
      -verbose => 1
    } ) if @ARGV < 1;

&main( \%opt, @ARGV );

=pod

=head1 SYNOPSIS

grab_coords [options] filename

=head1 OPTIONS

=over

=item B<-h>, B<--help>

Print this help message and exit

=item B<-o FILENAME [f]>, B<--output FILENAME [--force]>

Write output to FILENAME (in xyz format). Optionally, force overwrite if FILENAME exists

=back

=cut

