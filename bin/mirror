#!/usr/bin/env perl

use strict;
use lib $ENV{'QCHASM'};

use Getopt::Long;
use Pod::Usage;
use Math::Trig;
use AaronTools::Geometry;

unshift @INC, ("$ENV{'QCHASM'}/AaronTools/bin");
require _utils;

sub main {
    my $file = shift;
    my %opt  = @_;

    my $geom = _utils::get_geom($file);
    return 1 unless $geom;

    $geom->mirror_coords( $opt{axis} );

    # Printing
    # make comment something useful
    my $comment = _utils::strip_dir($file);
    $comment .= "   Mirror (" . $opt{axis} . ")";

    unless ( $opt{force} ) {
        $opt{outfile} = _utils::handle_overwrite( $opt{outfile} );
    }
    _utils::mkdirsfor( $opt{outfile} ) if $opt{outfile};
    print("Saving mirrored coords to $opt{outfile}\n") if $opt{outfile};
    $geom->printXYZ( $opt{outfile}, $comment, 1 );

	return 0;
}

my %opt;
$opt{help}  = '';
$opt{axis}  = 'x';
$opt{write} = '-';
GetOptions( 'help|h'     => \$opt{help},
            'axis|x=s'   => \$opt{axis},
            'force|f'    => \$opt{force},
            'output|o=s' => \$opt{output} )
  or pod2usage(
    { -exitval => 1,
      -verbose => 1
    } );
pod2usage(0) if $opt{help};
pod2usage(
    { -message => "Please specify at least one filename\n",
      -exitval => 1,
      -verbose => 1
    } ) if @ARGV < 1;
pod2usage(
    { -message => "Please specify x, y, or z to mirror\n",
      -exitval => 1,
      -verbose => 1
    } ) unless ( $opt{axis} =~ m/[xXyYzZ]/ );

&main( $ARGV[0], %opt );

=pod

=head1 SYNOPSIS

mirror [options] file

=head2 SYNOPSIS

mirror structure across the specified plane

=head1 OPTIONS

=over

=item B<-x x>, B<--axis x>

Specify cartesian axis perpendicular to reflection plane (defaults to X).

=item B<-o FILENAME [-f]>, B<--output FILENAME [--force]>

Write new geometry to FILENAME instead of STDOUT.
Optionally, force overwrite if file already exists.

=item B<-h>, B<--help>

Print this help message and exit

=back

=cut

